/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SkillsRouteImport } from './routes/skills'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectIndexRouteImport } from './routes/project/index'
import { Route as ProjectIdRouteImport } from './routes/project/$id'

const SkillsRoute = SkillsRouteImport.update({
  id: '/skills',
  path: '/skills',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectIndexRoute = ProjectIndexRouteImport.update({
  id: '/project/',
  path: '/project/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectIdRoute = ProjectIdRouteImport.update({
  id: '/project/$id',
  path: '/project/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/skills': typeof SkillsRoute
  '/project/$id': typeof ProjectIdRoute
  '/project': typeof ProjectIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/skills': typeof SkillsRoute
  '/project/$id': typeof ProjectIdRoute
  '/project': typeof ProjectIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/skills': typeof SkillsRoute
  '/project/$id': typeof ProjectIdRoute
  '/project/': typeof ProjectIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/skills'
    | '/project/$id'
    | '/project'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/contact' | '/skills' | '/project/$id' | '/project'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/skills'
    | '/project/$id'
    | '/project/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  SkillsRoute: typeof SkillsRoute
  ProjectIdRoute: typeof ProjectIdRoute
  ProjectIndexRoute: typeof ProjectIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/skills': {
      id: '/skills'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof SkillsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/': {
      id: '/project/'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof ProjectIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/project/$id': {
      id: '/project/$id'
      path: '/project/$id'
      fullPath: '/project/$id'
      preLoaderRoute: typeof ProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  SkillsRoute: SkillsRoute,
  ProjectIdRoute: ProjectIdRoute,
  ProjectIndexRoute: ProjectIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
